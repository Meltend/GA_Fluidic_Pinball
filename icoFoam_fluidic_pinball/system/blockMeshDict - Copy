/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v2312                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters   1;

vertices
(
    (0 0 0) //0
    (10 0 0) //1
	(10 10 0) //2
    (0 10 0)  //3 
	(0 0 0.1) //4 
	(10 0 0.1) //5
	(10 10 0.1) //6
	(0 10 0.1) //7
  
    // Cylinder vertices (approximating circle)
    (3.5 5 0)    // 8
    (3.35 4.85 0) // 9
    (3.15 4.85 0) // 10
    (3 5 0)     // 11
    (3.15 5.15 0) // 12
    (3.35 5.15 0) // 13
    // Duplicating the z points
    (3.5 5 1)    // 14
    (3.35 4.85 1) // 15
    (3.15 4.85 1) // 16
    (3 5 1)     // 17
    (3.15 5.15 1) // 18
    (3.35 5.15 1) // 19
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (20 20 1) simpleGrading (1 1 1)
);

edges
(
    arc 8 9 (3.425 4.925 0)
    arc 9 10 (3.25 4.85 0)
    arc 10 11 (3.075 4.925 0)
    arc 11 12 (3.075 5.075 0)
    arc 12 13 (3.25 5.15 0)
    arc 13 8 (3.425 5.075 0)
    // Duplicate the arcs for the top face
    arc 14 15 (3.425 4.925 0.1)
    arc 15 16 (3.25 4.85 0.1)
    arc 16 17 (3.075 4.925 0.1)
    arc 17 18 (3.075 5.075 0.1)
    arc 18 19 (3.25 5.15 0.1)
    arc 19 14 (3.425 5.075 0.1)
);

boundary
(
    inlet
    {
        type patch;
        faces
        (
            (0 3 7 4)
        );
    }
    outlet
    {
        type patch;
        faces
        (
            (1 2 6 5)
        );
    }
    walls
    {
        type wall;
        faces
        (
            (0 1 2 3)
            (4 5 6 7)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 1 5 4)
            (3 2 6 7)
        );
    }
	cylinder
    {
        type wall;
        faces
        (
            (8 9 15 14)
            (9 10 16 15)
            (10 11 17 16)
            (11 12 18 17)
            (12 13 19 18)
            (13 8 14 19)
        );
    }

);



// ************************************************************************* //
